npx react-native run-android



const data = [

    {id: 0, name: "A", isFavorite: true},
    {id: 1, name: "B", isFavorite: false},
    {id: 2, name: "C", isFavorite: true},
    {id: 3, name: "D", isFavorite: false},
    {id: 4, name: "E", isFavorite: false},
]
const Router = () => {

    const [cafeList, setCafeList] = useState(data);
    const [showOnlyFavorites, setshowOnlyFavorites] = useState(false);

    function onFavoritesChange(isFavoriteSelected: boolean) {

        setshowOnlyFavorites(isFavoriteSelected);
        isFavoriteSelected
            ? setCafeList(cafeList.filter(cafelist => cafelist.isFavorite))
            : setCafeList(data);
    }

    return (
        <SafeAreaView>
            <Switch value={showOnlyFavorites} onValueChange={onFavoritesChange}/>
            <FlatList data={cafeList} renderItem={({item}) => <Text>{item.name}</Text>}/>
        </SafeAreaView>
    );
};

**************************************************************************************
const Router = () => {

    const [number1,setNumber1] =useState(0);
    const [number2,setNumber2] =useState(100);

    function increaseNumber1()
    {
        setNumber1(number1+1);
    }

    function increaseNumber2()
    {
        setNumber2(number2+100);
    }

    // @ts-ignore
    useEffect(() => {
        console.log("number 1 has been changed");

    }, [number1]);

    useEffect(() => {
        console.log("number 2 has been changed");
    }, [number2]);


    return (
        <SafeAreaView>
            <Text>This is Number1:{number1}</Text>
            <Text>This is Number2:{number2}</Text>
            <Button title="Number1" onPress={()=>increaseNumber1()} />
            <Button title="Number2" onPress={()=>increaseNumber2()} />

        </SafeAreaView>
    );
};

**************************************************************************************

import {FlatList, SafeAreaView, StyleSheet, Text, View, Switch, Button} from 'react-native';
import React, {useEffect, useState} from 'react';

const Router = () => {
    const [helloFlag, setHelloFlag] = useState(true);
    const title = helloFlag ? "Metni Gizle!" : "Metni Göster";
    function updateFlag() {
        setHelloFlag(!helloFlag);
    }

    return (
        <SafeAreaView>
            <Text>Life Cycle Example</Text>
            <Button title={title} onPress={() => updateFlag()}/>
            {helloFlag && <HelloComponent/>}
        </SafeAreaView>
    );
};

export default Router;

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },

});

function HelloComponent() {

    useEffect(() => {
        console.log("geldim ben");
        return () =>
        {
            console.log("gittim");
        }
    }, []);

    return (
        <View>
            <Text>This is component mentioned</Text>
        </View>
    );


};

**************************************************************************************


import {FlatList, SafeAreaView, StyleSheet, View} from 'react-native';
import React, {useState} from 'react';
import music_data from '../src/JsonData/music-data.json';
import SongCard from '../src/Components/MusicCard/ButtomCard.Style.tsx';
import SearchBar from "./Components/SearchBar/SearchBar.tsx";

const Router = () => {

    const [list, setList] = useState(music_data);


    // @ts-ignore
    const renderSong = ({item}) => <SongCard song={item}/>;
    const renderSeparator = ({}) => <View style={styles.seperator}></View>;

    // @ts-ignore
    const handleSearch = (text) => {
        const filteredList = music_data.filter((song) => {
            const searchedText = text.toLowerCase();
            const currentTitle = song.title.toLowerCase();
            return currentTitle.indexOf(searchedText) > -1;
        });
        setList(filteredList);
    };

    // @ts-ignore

    return (
        <SafeAreaView style={styles.container}>
            <SearchBar onSearch={handleSearch}/>
            <FlatList
                keyExtractor={item => item.id}
                data={list}
                renderItem={renderSong}
                ItemSeparatorComponent={renderSeparator}
            />
        </SafeAreaView>
    );
};

export default Router;

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    seperator: {
        borderWidth: 3,
        borderColor: "#e0e0e0",
    },
    appbar: {
        flexDirection: 'row',
        alignItems: 'center',
        padding: 10,
        backgroundColor: '#f4f4f4'
    },
    appbar_title: {
        fontSize: 20,
        flex: 1,
        textAlign: 'left'
    },
    search_button: {
        flexDirection: 'row',
        alignItems: 'center'
    },

    text_ınput: {
        padding: 5,
        marginRight: 10,
        borderRadius: 5,
        backgroundColor: '#e0e0e0'
    },
    icon_button: {
        width: 50,
        height: 50,
    },
    buttonsContainer: {
        padding: 10,
    },
    textStyle: {
        textAlign: 'center',
        marginBottom: 8,
    },


});


import {FlatList, SafeAreaView, StyleSheet, View} from 'react-native';
import React, {useState} from 'react';
import music_data from '../src/JsonData/music-data.json';
import SongCard from '../src/Components/MusicCard/ButtomCard.Style.tsx';
import SearchBar from "./Components/SearchBar/SearchBar.tsx";

const Router = () => {

    const [list, setList] = useState(music_data);


    // @ts-ignore
    const renderSong = ({item}) => <SongCard song={item}/>;
    const renderSeparator = ({}) => <View style={styles.seperator}></View>;

    // @ts-ignore
    const handleSearch = (text) => {
        const filteredList = music_data.filter((song) => {
            const searchedText = text.toLowerCase();
            const currentTitle = song.title.toLowerCase();
            return currentTitle.indexOf(searchedText) > -1;
        });
        setList(filteredList);
    };

    // @ts-ignore

    return (
        <SafeAreaView style={styles.container}>
            <SearchBar onSearch={handleSearch}/>
            <FlatList
                keyExtractor={item => item.id}
                data={list}
                renderItem={renderSong}
                ItemSeparatorComponent={renderSeparator}
            />
        </SafeAreaView>
    );
};

export default Router;

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    seperator: {
        borderWidth: 3,
        borderColor: "#e0e0e0",
    },
    appbar: {
        flexDirection: 'row',
        alignItems: 'center',
        padding: 10,
        backgroundColor: '#f4f4f4'
    },
    appbar_title: {
        fontSize: 20,
        flex: 1,
        textAlign: 'left'
    },
    search_button: {
        flexDirection: 'row',
        alignItems: 'center'
    },

    text_ınput: {
        padding: 5,
        marginRight: 10,
        borderRadius: 5,
        backgroundColor: '#e0e0e0'
    },
    icon_button: {
        width: 50,
        height: 50,
    },
    buttonsContainer: {
        padding: 10,
    },
    textStyle: {
        textAlign: 'center',
        marginBottom: 8,
    },


});


***************************************************

import { FlatList, SafeAreaView, StyleSheet, Text, TextInput, View} from 'react-native';
import React, {useState} from 'react';
import music_data from '../src/JsonData/music-data.json';
import SongCard from '../src/Components/MusicCard/CustomButton.tsx';
import SearchBar from "./Components/SearchBar/SearchBar.tsx";
import Header from './Components/ToDoCard/Header/Header.tsx';
import { Button } from 'react-native-paper';
import ButtomCard from "./Components/ToDoCard/Bottom";
import ToDoCard  from "./Components/ToDoCard/Body";
const Router = () => {

    const [counter,setCounter]=useState(0);
    const [list,setList]=useState([]);
    const [mydata,setValue] = useState("")
    function UpdateCounter (){
        setCounter(counter+1);
        const deger =
            {
                id:counter,
                title:mydata,
                isDeleted:false
            }
        setList([...list,deger])
        console.log(deger)
    }

    return (
        <SafeAreaView style={styles.container}>
            <Header setCounter={counter}/>
            <FlatList
                keyExtractor={item =>item.id}
                data={list}
                renderItem={(item) => <ToDoCard setTodo={item}/>}
            />
            <ButtomCard setUpdate={UpdateCounter} text={mydata} settext={setValue}/>
        </SafeAreaView>
    );
};

export default Router;

const styles = StyleSheet.create({
    container:{
        flex:1,
        backgroundColor:'#102027',
    },

});
***************************************************************************
import { FlatList, SafeAreaView, StyleSheet, Text, TextInput, View} from 'react-native';
import React, {useState} from 'react';
import music_data from '../src/JsonData/music-data.json';
import SongCard from '../src/Components/MusicCard/CustomButton.tsx';
import SearchBar from "./Components/SearchBar/SearchBar.tsx";
import Header from './Components/ToDoCard/Header/Header.tsx';
import { Button } from 'react-native-paper';
import ButtomCard from "./Components/ToDoCard/Bottom";
import ToDoCard  from "./Components/ToDoCard/Body";
const Router = () => {

    const [counter,setCounter]=useState(0);
    const [list,setList]=useState([]);
    const [mydata,setValue] = useState("")
    function UpdateCounter (){
        setCounter(counter+1);
        const deger =
            {
                id:counter,
                title:mydata,
                isDeleted:false
            }
        setList([...list,deger])
        console.log(deger)
    }

    return (
        <SafeAreaView style={styles.container}>
            <Header setCounter={counter}/>
            <FlatList
                keyExtractor={item =>item.id}
                data={list}
                renderItem={(item) => <ToDoCard setTodo={item}/>}
            />
            <ButtomCard setUpdate={UpdateCounter} text={mydata} settext={setValue}/>
        </SafeAreaView>
    );
};

export default Router;

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor:"white",
    },

});

********************************************************************************

import React from 'react';
import {SafeAreaView, StyleSheet} from 'react-native';
import MemberSign from "./src/Screens/MemberSign/MemberSign.tsx";
import {createStackNavigator} from '@react-navigation/stack';
import WelcomeScreen from './src/Screens/WelcomeScreen/WelcomeScreen.tsx';
import {NavigationContainer} from "@react-navigation/native";
import MemberResult from './src/Screens/MemberResult/MemberResult.tsx'



const Stack = createStackNavigator();

// @ts-ignore
function App({navigation}) {


    return (
        <SafeAreaView style={{flex:1}}>
            <NavigationContainer>
                <Stack.Navigator>
                    <Stack.Screen name="WelcomeScreen" component={WelcomeScreen}/>
                    <Stack.Screen name="MemberSign" component={MemberSign}/>
                    <Stack.Screen name="MemberResult" component={MemberResult}/>
                </Stack.Navigator>
            </NavigationContainer>
        </SafeAreaView>
    );
}

export default App;

********************************************************************************


/*

const BottomTab = createBottomTabNavigator();
const Drawer = createDrawerNavigator();
<NavigationContainer>
            <BottomTab.Navigator>
                <BottomTab.Screen name="Page1" component={demo1}/>
                <BottomTab.Screen name="Page2" component={demo2}/>
            </BottomTab.Navigator>
        </NavigationContainer>


        <NavigationContainer>
            <BottomTab.Navigator>
                <BottomTab.Screen name="Page1" component={demo1}/>
                <BottomTab.Screen name="Page2" component={demo2}/>
            </BottomTab.Navigator>
        </NavigationContainer>
 */

 ********************************************************************************
 import React, {useEffect, useState} from 'react';
 import {AppRegistry, SafeAreaView, Text, Button, FlatList, ActivityIndicator} from 'react-native';
 import 'react-native-gesture-handler';
 import {DataTable} from "react-native-paper";
 import axios from "axios";
 import UserCard from "./src/Components/UserCard/UserCard.tsx";

 AppRegistry.registerComponent('AwesomeProject', () => App)

 function App() {
     const [userlist, SetUserlist] = useState([]);
     const [loading, SetLoading] = useState(false);

     async function fetchData() {
         SetLoading(true);
         const response = await axios.get("https://jsonplaceholder.typicode.com/users");
         SetLoading(false);
         SetUserlist(response.data);
     }

     //@ts-ignore
     const renderUser = ({item}) => <UserCard name={item.name} email={item.email} username={item.username}/>

     useEffect(()=>{
         fetchData();
     },[]);

     return (
         <SafeAreaView>
             {loading ? (
                     <ActivityIndicator/>
                 ) :
                 <FlatList data={userlist} renderItem={renderUser}/>
             }
             <Button title="Fetch Data" onPress={fetchData}/>
         </SafeAreaView>
     );
 }

 export default App;


*********************************************************
